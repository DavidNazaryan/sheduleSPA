#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–∞—Ä–æ—Å—Ç—ã —á–µ—Ä–µ–∑ API
"""

import requests
import json
import sys

# URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
BASE_URL = "http://localhost:8000"

def assign_monitor(user_id, group_id, bot_token=None):
    """–ù–∞–∑–Ω–∞—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ç–∞—Ä–æ—Å—Ç–æ–π –≥—Ä—É–ø–ø—ã"""
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    data = {
        'user_id': user_id,
        'role': 'monitor',
        'group_id': group_id
    }
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if bot_token:
        data['init_data'] = f'bot_token={bot_token}'
    
    try:
        print(f"–ù–∞–∑–Ω–∞—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —Å—Ç–∞—Ä–æ—Å—Ç–æ–π –≥—Ä—É–ø–ø—ã {group_id}...")
        
        response = requests.post(f"{BASE_URL}/api/users/role", data=data)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {result.get('message', '–†–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ: uvicorn app.main:app --reload")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    if len(sys.argv) < 3:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python assign_monitor.py <user_id> <group_id> [bot_token]")
        print("")
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python assign_monitor.py 123456789 test-group")
        print("  python assign_monitor.py 123456789 test-group your_bot_token")
        print("")
        print("–ì–¥–µ:")
        print("  user_id   - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram")
        print("  group_id  - ID –≥—Ä—É–ø–ø—ã")
        print("  bot_token - —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
        sys.exit(1)
    
    user_id = sys.argv[1]
    group_id = sys.argv[2]
    bot_token = sys.argv[3] if len(sys.argv) > 3 else None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ user_id - —ç—Ç–æ —á–∏—Å–ª–æ
    try:
        user_id = int(user_id)
    except ValueError:
        print("‚ùå –û—à–∏–±–∫–∞: user_id –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        sys.exit(1)
    
    success = assign_monitor(user_id, group_id, bot_token)
    
    if success:
        print("\nüéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω —Å—Ç–∞—Ä–æ—Å—Ç–æ–π!")
        print("–¢–µ–ø–µ—Ä—å –æ–Ω –º–æ–∂–µ—Ç:")
        print("- –î–æ–±–∞–≤–ª—è—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è")
        print("- –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –≥—Ä—É–ø–ø—ã")
        print("- –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    else:
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Å—Ç–∞—Ä–æ—Å—Ç—É")
        sys.exit(1)

if __name__ == "__main__":
    main()

