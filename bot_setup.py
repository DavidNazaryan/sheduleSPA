#!/usr/bin/env python3
"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ WebApp
"""

import requests
import json
import os
from typing import Dict, Any

class TelegramBotSetup:
    def __init__(self, bot_token: str):
        self.bot_token = bot_token
        self.base_url = f"https://api.telegram.org/bot{bot_token}"
    
    def set_webhook(self, webhook_url: str) -> Dict[str, Any]:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç webhook –¥–ª—è –±–æ—Ç–∞"""
        url = f"{self.base_url}/setWebhook"
        data = {
            "url": webhook_url,
            "allowed_updates": ["message", "callback_query"]
        }
        
        try:
            response = requests.post(url, json=data)
            return response.json()
        except Exception as e:
            return {"ok": False, "error": str(e)}
    
    def set_commands(self) -> Dict[str, Any]:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"""
        url = f"{self.base_url}/setMyCommands"
        
        commands = [
            {"command": "start", "description": "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –≤–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"},
            {"command": "help", "description": "‚ùì –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –±–æ—Ç—É"},
            {"command": "login", "description": "üîê –í–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"},
            {"command": "status", "description": "üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"}
        ]
        
        data = {"commands": commands}
        
        try:
            response = requests.post(url, json=data)
            return response.json()
        except Exception as e:
            return {"ok": False, "error": str(e)}
    
    def set_webapp_menu(self, webapp_url: str) -> Dict[str, Any]:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–µ–Ω—é —Å WebApp –∫–Ω–æ–ø–∫–æ–π"""
        url = f"{self.base_url}/setChatMenuButton"
        
        data = {
            "menu_button": {
                "type": "web_app",
                "text": "üìÖ –û—Ç–∫—Ä—ã—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
                "web_app": {
                    "url": webapp_url
                }
            }
        }
        
        try:
            response = requests.post(url, json=data)
            return response.json()
        except Exception as e:
            return {"ok": False, "error": str(e)}
    
    def get_webhook_info(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook"""
        url = f"{self.base_url}/getWebhookInfo"
        
        try:
            response = requests.get(url)
            return response.json()
        except Exception as e:
            return {"ok": False, "error": str(e)}
    
    def delete_webhook(self) -> Dict[str, Any]:
        """–£–¥–∞–ª—è–µ—Ç webhook"""
        url = f"{self.base_url}/deleteWebhook"
        
        try:
            response = requests.post(url)
            return response.json()
        except Exception as e:
            return {"ok": False, "error": str(e)}
    
    def send_message(self, chat_id: int, text: str, reply_markup: Dict = None) -> Dict[str, Any]:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        url = f"{self.base_url}/sendMessage"
        
        data = {
            "chat_id": chat_id,
            "text": text,
            "parse_mode": "Markdown"
        }
        
        if reply_markup:
            data["reply_markup"] = reply_markup
        
        try:
            response = requests.post(url, json=data)
            return response.json()
        except Exception as e:
            return {"ok": False, "error": str(e)}
    
    def send_webapp_button(self, chat_id: int, webapp_url: str) -> Dict[str, Any]:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π WebApp"""
        text = """
üéì *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –§–ì–£ –ú–ì–£!*

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ üìÖ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä
‚Ä¢ üìù –î–æ–±–∞–≤–ª—è—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è (–¥–ª—è —Å—Ç–∞—Ä–æ—Å—Ç)
‚Ä¢ üë• –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–¥–ª—è —Å—Ç–∞—Ä–æ—Å—Ç)
‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:
        """
        
        reply_markup = {
            "inline_keyboard": [[
                {
                    "text": "üìÖ –û—Ç–∫—Ä—ã—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
                    "web_app": {"url": webapp_url}
                }
            ]]
        }
        
        return self.send_message(chat_id, text, reply_markup)
    
    def send_help_message(self, chat_id: int) -> Dict[str, Any]:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø—Ä–∞–≤–∫—É"""
        text = """
ü§ñ *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è*

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –≤–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
/login - üîê –í–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
/help - ‚ùì –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/status - üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞

*–§—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:*
‚Ä¢ üìÖ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–∞—Ä
‚Ä¢ üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π (–¥–ª—è —Å—Ç–∞—Ä–æ—Å—Ç)
‚Ä¢ üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–¥–ª—è —Å—Ç–∞—Ä–æ—Å—Ç)
‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø—Ä–æ—Ñ–∏–ª—å

*–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:*
1. –ù–∞–∂–º–∏—Ç–µ /start –∏–ª–∏ /login
2. –í—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
3. –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram

*–ü–æ–¥–¥–µ—Ä–∂–∫–∞:* @david_nazaryan
        """
        
        return self.send_message(chat_id, text)
    
    def send_status_message(self, chat_id: int) -> Dict[str, Any]:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"""
        webhook_info = self.get_webhook_info()
        
        if webhook_info.get("ok"):
            result = webhook_info.get("result", {})
            status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if result.get("url") else "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            url = result.get("url", "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            errors = result.get("last_error_message", "–ù–µ—Ç")
        else:
            status = "‚ùå –û—à–∏–±–∫–∞"
            url = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            errors = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
        
        text = f"""
üìä *–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è*

*Webhook:* {status}
*URL:* `{url}`
*–û—à–∏–±–∫–∏:* {errors}

*–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!* üöÄ
        """
        
        return self.send_message(chat_id, text)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    BOT_TOKEN = "8296584992:AAFmltay1-OZolKK0AoF8pdKF2kELfg4boA"
    WEBHOOK_URL = "http://localhost:8000/webhook"
    WEBAPP_URL = "http://localhost:8000"
    
    print("ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞ @scheduleSPAbot")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    bot = TelegramBotSetup(BOT_TOKEN)
    
    # 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    print("\n1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞...")
    result = bot.set_commands()
    if result.get("ok"):
        print("‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥: {result.get('error')}")
    
    # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º WebApp –º–µ–Ω—é
    print("\n2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º WebApp –º–µ–Ω—é...")
    result = bot.set_webapp_menu(WEBAPP_URL)
    if result.get("ok"):
        print("‚úÖ WebApp –º–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–µ–Ω—é: {result.get('error')}")
    
    # 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    print("\n3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook...")
    result = bot.set_webhook(WEBHOOK_URL)
    if result.get("ok"):
        print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result.get('error')}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    print("\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å webhook...")
    result = bot.get_webhook_info()
    if result.get("ok"):
        webhook_info = result.get("result", {})
        print(f"üìä URL: {webhook_info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
        print(f"üìä –°—Ç–∞—Ç—É—Å: {'–ê–∫—Ç–∏–≤–µ–Ω' if webhook_info.get('url') else '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result.get('error')}")
    
    print("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\n–¢–µ–ø–µ—Ä—å:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: uvicorn app.main:app --reload")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞: https://t.me/scheduleSPAbot")
    print("3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
    print("4. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–û—Ç–∫—Ä—ã—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'")


if __name__ == "__main__":
    main()

